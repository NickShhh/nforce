const express = require('express');
const router = express.Router();
const fetch = require('node-fetch');

// Webhook de Discord para reportes de exploiters
const webhookUrl = 'https://discord.com/api/webhooks/WEBHOOK_ID/WEBHOOK_TOKEN';

// ID de usuarios autorizados para banear
const adminIds = ['123456789012345678', '987654321098765432']; // <-- Agrega aquÃ­ los Discord user IDs de mods/admins/CEOs

// FunciÃ³n para enviar embed con botÃ³n
async function sendExploitReportToDiscord(data) {
  const embed = {
    title: 'ðŸš¨ Potential Exploiter Detected',
    color: 0xff0000,
    fields: [
      { name: 'Username', value: data.username || 'Unknown', inline: true },
      { name: 'UserID', value: data.userId || 'Unknown', inline: true },
      { name: 'Reason', value: data.reason || 'Unknown Exploit Detected', inline: false },
      { name: 'Team', value: data.team || 'N/A', inline: true },
      { name: 'FPS', value: data.fps?.toString() || 'N/A', inline: true },
      { name: 'Ping', value: data.ping?.toString() || 'N/A', inline: true },
      { name: 'Location', value: data.location || 'Unknown', inline: true },
      { name: 'Device', value: data.device || 'Unknown', inline: true },
      { name: 'Behavior', value: data.behavior || 'Unknown', inline: false },
    ],
    timestamp: new Date().toISOString(),
    footer: {
      text: 'N-FORCE Anticheat System'
    }
  };

  const payload = {
    content: '@here ðŸš¨ **Possible exploiter detected!**',
    embeds: [embed],
    components: [
      {
        type: 1, // Action Row
        components: [
          {
            type: 2, // Button
            style: 4, // RED
            label: 'Confirm Ban',
            custom_id: `ban_user_${data.userId}`
          }
        ]
      }
    ]
  };

  const response = await fetch(webhookUrl, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(payload)
  });

  if (!response.ok) {
    console.error(`Failed to send Discord message: ${response.statusText}`);
  }

  return response.status;
}

router.post('/', async (req, res) => {
  const reportData = req.body;

  try {
    const status = await sendExploitReportToDiscord(reportData);
    res.status(200).json({ message: 'Exploit report sent to Discord', status });
  } catch (error) {
    console.error('Error sending exploit report:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

module.exports = router;
